{"ast":null,"code":"import L from 'leaflet';\nexport var OpenLocationCode = L.Class.extend({\n  options: {\n    OpenLocationCode: undefined,\n    codeLength: undefined\n  },\n  initialize: function (options) {\n    L.setOptions(this, options);\n  },\n  geocode: function (query, cb, context) {\n    try {\n      var decoded = this.options.OpenLocationCode.decode(query);\n      var result = {\n        name: query,\n        center: L.latLng(decoded.latitudeCenter, decoded.longitudeCenter),\n        bbox: L.latLngBounds(L.latLng(decoded.latitudeLo, decoded.longitudeLo), L.latLng(decoded.latitudeHi, decoded.longitudeHi))\n      };\n      cb.call(context, [result]);\n    } catch (e) {\n      console.warn(e); // eslint-disable-line no-console\n\n      cb.call(context, []);\n    }\n  },\n  reverse: function (location, scale, cb, context) {\n    try {\n      var code = this.options.OpenLocationCode.encode(location.lat, location.lng, this.options.codeLength);\n      var result = {\n        name: code,\n        center: L.latLng(location.lat, location.lng),\n        bbox: L.latLngBounds(L.latLng(location.lat, location.lng), L.latLng(location.lat, location.lng))\n      };\n      cb.call(context, [result]);\n    } catch (e) {\n      console.warn(e); // eslint-disable-line no-console\n\n      cb.call(context, []);\n    }\n  }\n});\nexport function openLocationCode(options) {\n  return new OpenLocationCode(options);\n}","map":{"version":3,"sources":["/home/isnardo/rcr/rose-city-resource/client/node_modules/leaflet-control-geocoder/src/geocoders/open-location-code.js"],"names":["L","OpenLocationCode","Class","extend","options","undefined","codeLength","initialize","setOptions","geocode","query","cb","context","decoded","decode","result","name","center","latLng","latitudeCenter","longitudeCenter","bbox","latLngBounds","latitudeLo","longitudeLo","latitudeHi","longitudeHi","call","e","console","warn","reverse","location","scale","code","encode","lat","lng","openLocationCode"],"mappings":"AAAA,OAAOA,CAAP,MAAc,SAAd;AAEA,OAAO,IAAIC,gBAAgB,GAAGD,CAAC,CAACE,KAAF,CAAQC,MAAR,CAAe;AAC3CC,EAAAA,OAAO,EAAE;AACPH,IAAAA,gBAAgB,EAAEI,SADX;AAEPC,IAAAA,UAAU,EAAED;AAFL,GADkC;AAM3CE,EAAAA,UAAU,EAAE,UAASH,OAAT,EAAkB;AAC5BJ,IAAAA,CAAC,CAACQ,UAAF,CAAa,IAAb,EAAmBJ,OAAnB;AACD,GAR0C;AAU3CK,EAAAA,OAAO,EAAE,UAASC,KAAT,EAAgBC,EAAhB,EAAoBC,OAApB,EAA6B;AACpC,QAAI;AACF,UAAIC,OAAO,GAAG,KAAKT,OAAL,CAAaH,gBAAb,CAA8Ba,MAA9B,CAAqCJ,KAArC,CAAd;AACA,UAAIK,MAAM,GAAG;AACXC,QAAAA,IAAI,EAAEN,KADK;AAEXO,QAAAA,MAAM,EAAEjB,CAAC,CAACkB,MAAF,CAASL,OAAO,CAACM,cAAjB,EAAiCN,OAAO,CAACO,eAAzC,CAFG;AAGXC,QAAAA,IAAI,EAAErB,CAAC,CAACsB,YAAF,CACJtB,CAAC,CAACkB,MAAF,CAASL,OAAO,CAACU,UAAjB,EAA6BV,OAAO,CAACW,WAArC,CADI,EAEJxB,CAAC,CAACkB,MAAF,CAASL,OAAO,CAACY,UAAjB,EAA6BZ,OAAO,CAACa,WAArC,CAFI;AAHK,OAAb;AAQAf,MAAAA,EAAE,CAACgB,IAAH,CAAQf,OAAR,EAAiB,CAACG,MAAD,CAAjB;AACD,KAXD,CAWE,OAAOa,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,IAAR,CAAaF,CAAb,EADU,CACO;;AACjBjB,MAAAA,EAAE,CAACgB,IAAH,CAAQf,OAAR,EAAiB,EAAjB;AACD;AACF,GA1B0C;AA2B3CmB,EAAAA,OAAO,EAAE,UAASC,QAAT,EAAmBC,KAAnB,EAA0BtB,EAA1B,EAA8BC,OAA9B,EAAuC;AAC9C,QAAI;AACF,UAAIsB,IAAI,GAAG,KAAK9B,OAAL,CAAaH,gBAAb,CAA8BkC,MAA9B,CACTH,QAAQ,CAACI,GADA,EAETJ,QAAQ,CAACK,GAFA,EAGT,KAAKjC,OAAL,CAAaE,UAHJ,CAAX;AAKA,UAAIS,MAAM,GAAG;AACXC,QAAAA,IAAI,EAAEkB,IADK;AAEXjB,QAAAA,MAAM,EAAEjB,CAAC,CAACkB,MAAF,CAASc,QAAQ,CAACI,GAAlB,EAAuBJ,QAAQ,CAACK,GAAhC,CAFG;AAGXhB,QAAAA,IAAI,EAAErB,CAAC,CAACsB,YAAF,CACJtB,CAAC,CAACkB,MAAF,CAASc,QAAQ,CAACI,GAAlB,EAAuBJ,QAAQ,CAACK,GAAhC,CADI,EAEJrC,CAAC,CAACkB,MAAF,CAASc,QAAQ,CAACI,GAAlB,EAAuBJ,QAAQ,CAACK,GAAhC,CAFI;AAHK,OAAb;AAQA1B,MAAAA,EAAE,CAACgB,IAAH,CAAQf,OAAR,EAAiB,CAACG,MAAD,CAAjB;AACD,KAfD,CAeE,OAAOa,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,IAAR,CAAaF,CAAb,EADU,CACO;;AACjBjB,MAAAA,EAAE,CAACgB,IAAH,CAAQf,OAAR,EAAiB,EAAjB;AACD;AACF;AA/C0C,CAAf,CAAvB;AAkDP,OAAO,SAAS0B,gBAAT,CAA0BlC,OAA1B,EAAmC;AACxC,SAAO,IAAIH,gBAAJ,CAAqBG,OAArB,CAAP;AACD","sourcesContent":["import L from 'leaflet';\n\nexport var OpenLocationCode = L.Class.extend({\n  options: {\n    OpenLocationCode: undefined,\n    codeLength: undefined\n  },\n\n  initialize: function(options) {\n    L.setOptions(this, options);\n  },\n\n  geocode: function(query, cb, context) {\n    try {\n      var decoded = this.options.OpenLocationCode.decode(query);\n      var result = {\n        name: query,\n        center: L.latLng(decoded.latitudeCenter, decoded.longitudeCenter),\n        bbox: L.latLngBounds(\n          L.latLng(decoded.latitudeLo, decoded.longitudeLo),\n          L.latLng(decoded.latitudeHi, decoded.longitudeHi)\n        )\n      };\n      cb.call(context, [result]);\n    } catch (e) {\n      console.warn(e); // eslint-disable-line no-console\n      cb.call(context, []);\n    }\n  },\n  reverse: function(location, scale, cb, context) {\n    try {\n      var code = this.options.OpenLocationCode.encode(\n        location.lat,\n        location.lng,\n        this.options.codeLength\n      );\n      var result = {\n        name: code,\n        center: L.latLng(location.lat, location.lng),\n        bbox: L.latLngBounds(\n          L.latLng(location.lat, location.lng),\n          L.latLng(location.lat, location.lng)\n        )\n      };\n      cb.call(context, [result]);\n    } catch (e) {\n      console.warn(e); // eslint-disable-line no-console\n      cb.call(context, []);\n    }\n  }\n});\n\nexport function openLocationCode(options) {\n  return new OpenLocationCode(options);\n}\n"]},"metadata":{},"sourceType":"module"}