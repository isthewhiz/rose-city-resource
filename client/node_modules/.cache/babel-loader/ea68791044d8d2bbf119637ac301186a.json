{"ast":null,"code":"var _jsxFileName = \"/home/isnardo/rcr/rose-city-resource/client/src/components/Results/Results.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport queryString from 'query-string';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport IconSelector from '../Home/IconSelector';\nimport SearchBar from '../Home/SearchBar';\nimport Cards from './Cards';\nimport SimpleMap from './Map';\nimport { getNodeFilteredData, detailsQueryBuilder } from '../../utils/api';\nimport './Results.css';\n\nclass Results extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      queryVals: null,\n      data: null,\n      selectedListing: null,\n      loading: true,\n      clickType: null //to keep track of how scroll should happen\n\n    };\n\n    this.updateListing = (id, clickType) => {\n      this.setState(() => ({\n        selectedListing: id,\n        clickType\n      }));\n    };\n  }\n\n  //check to see which query values are search OR\n  //category and/or parent\n  //and then set state with result\n  // the next few blocks are not DRY'd\n  componentDidMount() {\n    const queryVals = queryString.parse(this.props.location.search);\n    const dataMap = {\n      search: queryVals.search,\n      category: queryVals.category,\n      parent: queryVals.parent\n    };\n    const {\n      nodeData\n    } = this.props;\n    const data = getNodeFilteredData(dataMap.search, dataMap.category, dataMap.parent, nodeData);\n    this.setState(() => ({\n      queryVals: dataMap,\n      data,\n      loading: false\n    }));\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.location.search !== prevProps.location.search) {\n      const queryVals = queryString.parse(this.props.location.search);\n      const dataMap = {\n        search: queryVals.search,\n        category: queryVals.category,\n        parent: queryVals.parent\n      };\n      const {\n        nodeData\n      } = this.props;\n      const data = getNodeFilteredData(dataMap.search, dataMap.category, dataMap.parent, nodeData);\n      this.setState(() => ({\n        queryVals: dataMap,\n        data,\n        loading: false\n      }));\n    }\n  } // This is to deal with the unwanted rerenderings happening\n  //on mobile\n\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (nextState.loading !== this.state.loading && nextProps === this.props || nextState.selectedListing !== this.state.selectedListing && nextProps === this.props || nextProps.location.search !== this.props.location.search || nextState.data !== this.state.data) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  render() {\n    const {\n      data,\n      loading,\n      selectedListing,\n      clickType\n    } = this.state;\n    const {\n      nodeData,\n      searchData,\n      handleCardSave,\n      handleSaveDelete,\n      savedDataId\n    } = this.props;\n    const styles = {\n      faIcon: {\n        color: '#393f48',\n        marginRight: '5px'\n      }\n    };\n\n    if (loading === true) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 14\n        }\n      }, \"Loading...\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"basic-search-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(SearchBar, {\n      nodeData: nodeData,\n      searchData: searchData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(IconSelector, {\n      nodeData: nodeData,\n      searchData: searchData,\n      path: '/results',\n      isVisible: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"results-outer-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"results-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(SimpleMap, {\n      data: data,\n      selectedListing: selectedListing,\n      clickType: clickType,\n      updateListing: this.updateListing,\n      savedDataId: savedDataId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    }), savedDataId.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"print-button-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: '/details',\n        search: detailsQueryBuilder(savedDataId)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"print-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      style: styles.faIcon,\n      icon: \"print\",\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 23\n      }\n    }), \"Print Saved Listings\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"print-button\",\n      onClick: () => {\n        handleSaveDelete();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 19\n      }\n    }, \"Clear Saved Listings\")) : null), /*#__PURE__*/React.createElement(Cards, {\n      data: data,\n      selectedListing: selectedListing,\n      updateListing: this.updateListing,\n      clickType: clickType,\n      handleCardSave: handleCardSave,\n      savedDataId: savedDataId,\n      showMapDetail: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default Results; // REMOVED FROM COMPONENT DID MOUNT------------------------------------------------------------------------\n//if the search parameter doesn't exist show the parent org and category\n//else set the state to the result of the single search\n// if (dataMap.search === undefined) {\n//   const data = await nodeQueryBuilder(dataMap.category, dataMap.parent);\n//   this.setState(() => ({ queryVals: dataMap, data, loading: false }));\n// } else {\n//   const { nodeData } = this.props;\n//   const data = getFilteredData(dataMap.search, nodeData);\n//   this.setState(() => ({ queryVals: dataMap, data, loading: false }));\n// }\n//-------------------------------------------------------------------\n// REMOVED FROM COMPONENT DID UPDATE-----------------------------------------------------------------------\n//if the search parameter doesn't exist show the parent org and category\n//else set the state to the result of the single search\n// if (dataMap.search === undefined) {\n//   const data = await nodeQueryBuilder(dataMap.category, dataMap.parent);\n//   this.setState(() => ({ queryVals: dataMap, data, loading: false }));\n// } else {\n//   const { nodeData } = this.props;\n//   const data = getFilteredData(dataMap.search, nodeData);\n//   this.setState(() => ({ queryVals: dataMap, data, loading: false }));\n// }\n// -----------------------------------------------------------------------","map":{"version":3,"sources":["/home/isnardo/rcr/rose-city-resource/client/src/components/Results/Results.js"],"names":["React","Link","queryString","FontAwesomeIcon","IconSelector","SearchBar","Cards","SimpleMap","getNodeFilteredData","detailsQueryBuilder","Results","Component","state","queryVals","data","selectedListing","loading","clickType","updateListing","id","setState","componentDidMount","parse","props","location","search","dataMap","category","parent","nodeData","componentDidUpdate","prevProps","shouldComponentUpdate","nextProps","nextState","render","searchData","handleCardSave","handleSaveDelete","savedDataId","styles","faIcon","color","marginRight","length","pathname"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport queryString from 'query-string';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport IconSelector from '../Home/IconSelector';\nimport SearchBar from '../Home/SearchBar';\nimport Cards from './Cards';\nimport SimpleMap from './Map';\nimport { getNodeFilteredData, detailsQueryBuilder } from '../../utils/api';\nimport './Results.css';\n\nclass Results extends React.Component {\n  state = {\n    queryVals: null,\n    data: null,\n    selectedListing: null,\n    loading: true,\n    clickType: null //to keep track of how scroll should happen\n  };\n\n  updateListing = (id, clickType) => {\n    this.setState(() => ({ selectedListing: id, clickType }));\n  };\n\n  //check to see which query values are search OR\n  //category and/or parent\n  //and then set state with result\n  // the next few blocks are not DRY'd\n  componentDidMount() {\n    const queryVals = queryString.parse(this.props.location.search);\n\n    const dataMap = {\n      search: queryVals.search,\n      category: queryVals.category,\n      parent: queryVals.parent\n    };\n\n    const { nodeData } = this.props;\n    const data = getNodeFilteredData(\n      dataMap.search,\n      dataMap.category,\n      dataMap.parent,\n      nodeData\n    );\n\n    this.setState(() => ({\n      queryVals: dataMap,\n      data,\n      loading: false\n    }));\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.location.search !== prevProps.location.search) {\n      const queryVals = queryString.parse(this.props.location.search);\n\n      const dataMap = {\n        search: queryVals.search,\n        category: queryVals.category,\n        parent: queryVals.parent\n      };\n\n      const { nodeData } = this.props;\n      const data = getNodeFilteredData(\n        dataMap.search,\n        dataMap.category,\n        dataMap.parent,\n        nodeData\n      );\n\n      this.setState(() => ({\n        queryVals: dataMap,\n        data,\n        loading: false\n      }));\n    }\n  }\n\n  // This is to deal with the unwanted rerenderings happening\n  //on mobile\n  shouldComponentUpdate(nextProps, nextState) {\n    if (\n      (nextState.loading !== this.state.loading && nextProps === this.props) ||\n      (nextState.selectedListing !== this.state.selectedListing &&\n        nextProps === this.props) ||\n      nextProps.location.search !== this.props.location.search ||\n      nextState.data !== this.state.data\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  render() {\n    const { data, loading, selectedListing, clickType } = this.state;\n    const {\n      nodeData,\n      searchData,\n      handleCardSave,\n      handleSaveDelete,\n      savedDataId\n    } = this.props;\n\n    const styles = {\n      faIcon: {\n        color: '#393f48',\n        marginRight: '5px'\n      }\n    };\n\n    if (loading === true) {\n      return <div>Loading...</div>;\n    }\n    return (\n      <div>\n        <div className=\"basic-search-container\">\n          <SearchBar nodeData={nodeData} searchData={searchData} />\n        </div>\n        <IconSelector\n          nodeData={nodeData}\n          searchData={searchData}\n          path={'/results'}\n          isVisible={false}\n        />\n\n        <div className=\"results-outer-container\">\n          <div className=\"results-container\">\n            <div className=\"map-container\">\n              <SimpleMap\n                data={data}\n                selectedListing={selectedListing}\n                clickType={clickType}\n                updateListing={this.updateListing}\n                savedDataId={savedDataId}\n              />\n              {savedDataId.length > 0 ? (\n                <div className=\"print-button-container\">\n                  <Link\n                    to={{\n                      pathname: '/details',\n                      search: detailsQueryBuilder(savedDataId)\n                    }}\n                  >\n                    <div className=\"print-button\">\n                      <FontAwesomeIcon\n                        style={styles.faIcon}\n                        icon=\"print\"\n                        size=\"sm\"\n                      />\n                      Print Saved Listings\n                    </div>\n                  </Link>\n                  <div\n                    className=\"print-button\"\n                    onClick={() => {\n                      handleSaveDelete();\n                    }}\n                  >\n                    Clear Saved Listings\n                  </div>\n                </div>\n              ) : null}\n            </div>\n            <Cards\n              data={data}\n              selectedListing={selectedListing}\n              updateListing={this.updateListing}\n              clickType={clickType}\n              handleCardSave={handleCardSave}\n              savedDataId={savedDataId}\n              showMapDetail={false}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Results;\n\n// REMOVED FROM COMPONENT DID MOUNT------------------------------------------------------------------------\n//if the search parameter doesn't exist show the parent org and category\n//else set the state to the result of the single search\n// if (dataMap.search === undefined) {\n//   const data = await nodeQueryBuilder(dataMap.category, dataMap.parent);\n//   this.setState(() => ({ queryVals: dataMap, data, loading: false }));\n// } else {\n//   const { nodeData } = this.props;\n//   const data = getFilteredData(dataMap.search, nodeData);\n//   this.setState(() => ({ queryVals: dataMap, data, loading: false }));\n// }\n//-------------------------------------------------------------------\n\n// REMOVED FROM COMPONENT DID UPDATE-----------------------------------------------------------------------\n//if the search parameter doesn't exist show the parent org and category\n//else set the state to the result of the single search\n// if (dataMap.search === undefined) {\n//   const data = await nodeQueryBuilder(dataMap.category, dataMap.parent);\n//   this.setState(() => ({ queryVals: dataMap, data, loading: false }));\n// } else {\n//   const { nodeData } = this.props;\n//   const data = getFilteredData(dataMap.search, nodeData);\n//   this.setState(() => ({ queryVals: dataMap, data, loading: false }));\n// }\n// -----------------------------------------------------------------------\n"]},"metadata":{},"sourceType":"module"}