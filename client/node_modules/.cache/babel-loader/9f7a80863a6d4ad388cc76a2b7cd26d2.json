{"ast":null,"code":"var _jsxFileName = \"/home/isnardo/rcr/rose-city-resource/client/src/components/Results/Cards.js\";\nimport React from \"react\";\nimport ScrollUpButton from \"react-scroll-up-button\";\nimport ReactTooltip from \"react-tooltip\";\nimport MediaQuery from \"react-responsive\";\nimport { Map, TileLayer, Marker } from \"react-leaflet\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport CountBar from \"./CountBar\";\nimport { cardPhoneTextFilter, cardTextFilter, cardSortByDistance, cardWebAddressFixer } from \"../../utils/api\";\nimport { greenLMarker } from \"./../../icons/mapIcons\";\n\nconst DetailMap = props => {\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Map, {\n    center: props.coords,\n    zoom: 15,\n    scrollWheelZoom: true,\n    tap: true,\n    dragging: true,\n    touchZoom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TileLayer, {\n    attribution: \"\",\n    url: \"https://{s}.basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}{r}.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Marker, {\n    position: props.coords,\n    icon: greenLMarker,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  })));\n}; //style for background\n//card style when a location is\n//selected by user\n\n\nconst style = {\n  boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.5), 0 6px 20px 0 rgba(0, 0, 0, 0.5)\"\n};\n\nclass Card extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selector: \"location\"\n    };\n    this.cardRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const {\n      record\n    } = this.props;\n    this.props.handleCardRef(this.cardRef, record.id);\n  }\n\n  render() {\n    const {\n      record,\n      selectedListing,\n      updateListing,\n      handleCardClick,\n      handleCardSave,\n      savedDataId,\n      showMapDetail\n    } = this.props;\n    const textMap = {\n      parsedCategory: record.main_category,\n      parsedListing: record.listing,\n      parsedPhone: cardPhoneTextFilter(record),\n      parsedWeb: cardWebAddressFixer(record.website),\n      parsedStreet: `${cardTextFilter(record.street)} ${cardTextFilter(record.street2)}`.trim(),\n      parsedCity: `${record.city}, OR ${record.postal_code}`,\n      parsedDescription: cardTextFilter(record.service_description),\n      parsedHours: cardTextFilter(record.hours),\n      parsedCOVID: cardTextFilter(record.emergency_message)\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-map-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.cardRef,\n      className: \"card-container\",\n      style: record.id === selectedListing ? style : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, textMap.parsedCategory), textMap.parsedCOVID === \"CLOSED DUE TO COVID\" ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"covid-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }\n    }, textMap.parsedCOVID) : null), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-listing\",\n      style: selectedListing === record.id ? {\n        color: \"#27a727\",\n        fontWeight: \"bolder\"\n      } : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, textMap.parsedListing), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spacer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }), record.lat !== \"NA\" || record.lon !== \"NA\" ? /*#__PURE__*/React.createElement(\"button\", {\n      className: \"card-save-button\",\n      \"data-tip\": \"Show on map.\",\n      \"data-for\": \"show-listing-tooltip\",\n      onClick: () => {\n        handleCardClick(this.cardRef, record.id);\n        updateListing(record.id, \"card\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: \"map-marker\",\n      size: \"sm\",\n      style: selectedListing === record.id ? {\n        color: \"#27a727\"\n      } : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }), \"Show\", /*#__PURE__*/React.createElement(ReactTooltip, {\n      id: \"show-listing-tooltip\",\n      place: \"top\",\n      type: \"dark\",\n      effect: \"solid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    })) : null, !showMapDetail ? /*#__PURE__*/React.createElement(MediaQuery, {\n      query: \"(min-width: 993px)\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"card-save-button\",\n      \"data-tip\": \"Save listing, print later.\",\n      \"data-for\": \"save-tooltip\",\n      onClick: () => handleCardSave(record.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: \"save\",\n      size: \"sm\",\n      style: savedDataId.indexOf(record.id) > -1 ? {\n        color: \"green\"\n      } : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 19\n      }\n    }), \"Save\", /*#__PURE__*/React.createElement(ReactTooltip, {\n      id: \"save-tooltip\",\n      place: \"top\",\n      type: \"dark\",\n      effect: \"solid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 19\n      }\n    }))) : null), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-street\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }\n    }, !(textMap.parsedStreet === \"\") ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 15\n      }\n    }, textMap.parsedStreet, \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 40\n      }\n    }), textMap.parsedCity, \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 38\n      }\n    }), record.distance !== null ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-distance\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      className: \"card-map-marker\",\n      icon: \"map-marker\",\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }\n    }), `${Number(record.distance.toFixed(2))} miles`, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }\n    })) : null, /*#__PURE__*/React.createElement(\"a\", {\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      href: \"//www.google.com/maps/dir/\" + record.directionsUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }\n    }, \"Get Directions\")) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-undisclosed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 15\n      }\n    }, \"Undisclosed Location\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"covid-item covid-temp-listing\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }\n    }, textMap.parsedCOVID === \"TEMPORARY COVID RESPONSE SERVICE\" ? textMap.parsedCOVID : null), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-phone-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }\n    }, textMap.parsedPhone ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: \"phone\",\n      className: \"phone-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }\n    }), textMap.parsedPhone.map((phone, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: `${phone.phone}-${index}`,\n        className: \"card-phone\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 23\n        }\n      }, `${phone.type}: `), phone.phone);\n    })) : null), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-web-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }\n    }, textMap.parsedWeb ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: \"globe\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"a\", {\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      href: textMap.parsedWeb,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }\n    }, \" website\")) : null), !(textMap.parsedDescription === \"\") ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 15\n      }\n    }, \"Service Description:\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 15\n      }\n    }, textMap.parsedDescription)) : null, !(textMap.parsedCOVID === \"ClOSED DUE TO COVID\") ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"covid-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 15\n      }\n    }, textMap.parsedCOVID) : null, !(textMap.parsedHours === \"\") ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-title-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }\n    }, \"Hours:\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"covid-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }\n    }, textMap.parsedCOVID === \"HOURS CHANGED DUE TO COVID\" ? textMap.parsedCOVID : null)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 15\n      }\n    }, textMap.parsedCOVID === \"CLOSED DUE TO COVID\" ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"covid-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 19\n      }\n    }, \"CLOSED\") : textMap.parsedHours)) : null), showMapDetail ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map-details-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }\n    }, record.lat !== \"NA\" ? /*#__PURE__*/React.createElement(DetailMap, {\n      coords: [Number(record.lat), Number(record.lon)],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 15\n      }\n    }) : null) : null);\n  }\n\n}\n\nclass Cards extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentCardRef: null,\n      cardRefs: []\n    };\n\n    this.cardScrollToCard = cardRef => {\n      //the card is on the first element of the\n      //the cardRef array\n      window.scrollTo({\n        top: cardRef[0][0].offsetTop - 60,\n        behavior: \"smooth\"\n      });\n    };\n\n    this.handleCardRef = (ref, id) => {\n      //build up the state array without directly mutating state\n      this.setState(prevState => ({\n        cardRefs: [...prevState.cardRefs, [ref.current, id]]\n      }));\n    };\n\n    this.handleCardClick = (cardRef, id) => {\n      this.setState(() => ({\n        currentCardRef: [cardRef.current, id]\n      }));\n    };\n\n    this.undisclosedCounter = data => {\n      let counter = 0;\n\n      for (let i = 0; i < data.length; i++) {\n        if (data[i].street === \"NA\") {\n          counter += 1;\n        }\n      }\n\n      return counter;\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      cardRefs\n    } = this.state;\n    const {\n      selectedListing,\n      clickType\n    } = this.props;\n    const currentCard = cardRefs.filter(ref => ref[1] === selectedListing);\n\n    if (this.props.selectedListing !== prevProps.selectedListing) {\n      if (window.matchMedia(\"(max-width: 992px)\").matches && clickType === \"popup\") {\n        this.cardScrollToCard(currentCard);\n      }\n\n      if (window.matchMedia(\"(max-width: 992px)\").matches && clickType === \"card\") {\n        window.scrollTo({\n          top: 0,\n          behavior: \"smooth\"\n        });\n      }\n\n      if (window.matchMedia(\"(min-width: 993px)\").matches) {\n        this.cardScrollToCard(currentCard);\n      }\n    }\n  }\n\n  render() {\n    const {\n      data,\n      selectedListing,\n      updateListing,\n      handleCardSave,\n      savedDataId,\n      showMapDetail\n    } = this.props;\n    return (\n      /*#__PURE__*/\n      // the cards container should scroll on its own\n      React.createElement(\"div\", {\n        className: \"cards-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(CountBar, {\n        savedDataId: savedDataId,\n        data: data,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 9\n        }\n      }), cardSortByDistance(data).map((record, index) => /*#__PURE__*/React.createElement(Card, {\n        key: `${record.id}-${index}`,\n        record: record,\n        selectedListing: selectedListing,\n        updateListing: updateListing,\n        handleCardSave: handleCardSave,\n        handleCardClick: this.handleCardClick,\n        handleCardRef: this.handleCardRef,\n        savedDataId: savedDataId,\n        showMapDetail: showMapDetail,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(MediaQuery, {\n        query: \"(max-width: 992px)\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ScrollUpButton, {\n        StopPosition: 0,\n        ShowAtPosition: 150,\n        EasingType: \"easeOutCubic\",\n        AnimationDuration: 500 // ContainerClassName=\"ScrollUpButton__Container\"\n        // TransitionClassName=\"ScrollUpButton__Toggled\"\n        ,\n        style: {\n          left: \"50%\",\n          bottom: \"35px\",\n          right: \"50%\"\n        },\n        ToggledStyle: {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(MediaQuery, {\n        query: \"(min-width: 993px)\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ScrollUpButton, {\n        StopPosition: 0,\n        ShowAtPosition: 150,\n        EasingType: \"easeOutCubic\",\n        AnimationDuration: 500 // ContainerClassName=\"ScrollUpButton__Container\"\n        // TransitionClassName=\"ScrollUpButton__Toggled\"\n        ,\n        style: {\n          left: \"240px\",\n          bottom: \"35px\"\n        },\n        ToggledStyle: {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }\n      })))\n    );\n  }\n\n}\n\nexport default Cards;","map":{"version":3,"sources":["/home/isnardo/rcr/rose-city-resource/client/src/components/Results/Cards.js"],"names":["React","ScrollUpButton","ReactTooltip","MediaQuery","Map","TileLayer","Marker","FontAwesomeIcon","CountBar","cardPhoneTextFilter","cardTextFilter","cardSortByDistance","cardWebAddressFixer","greenLMarker","DetailMap","props","coords","style","boxShadow","Card","Component","state","selector","cardRef","createRef","componentDidMount","record","handleCardRef","id","render","selectedListing","updateListing","handleCardClick","handleCardSave","savedDataId","showMapDetail","textMap","parsedCategory","main_category","parsedListing","listing","parsedPhone","parsedWeb","website","parsedStreet","street","street2","trim","parsedCity","city","postal_code","parsedDescription","service_description","parsedHours","hours","parsedCOVID","emergency_message","color","fontWeight","lat","lon","indexOf","distance","Number","toFixed","directionsUrl","map","phone","index","type","Cards","currentCardRef","cardRefs","cardScrollToCard","window","scrollTo","top","offsetTop","behavior","ref","setState","prevState","current","undisclosedCounter","data","counter","i","length","componentDidUpdate","prevProps","clickType","currentCard","filter","matchMedia","matches","left","bottom","right"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ScrollUpButton from \"react-scroll-up-button\";\nimport ReactTooltip from \"react-tooltip\";\nimport MediaQuery from \"react-responsive\";\nimport { Map, TileLayer, Marker } from \"react-leaflet\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport CountBar from \"./CountBar\";\nimport {\n  cardPhoneTextFilter,\n  cardTextFilter,\n  cardSortByDistance,\n  cardWebAddressFixer,\n} from \"../../utils/api\";\nimport { greenLMarker } from \"./../../icons/mapIcons\";\n\nconst DetailMap = (props) => {\n  return (\n    <React.Fragment>\n      <Map\n        center={props.coords}\n        zoom={15}\n        scrollWheelZoom={true}\n        tap={true}\n        dragging={true}\n        touchZoom={true}\n      >\n        <TileLayer\n          attribution=\"\"\n          url=\"https://{s}.basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}{r}.png\"\n        />\n        <Marker position={props.coords} icon={greenLMarker} />\n      </Map>\n    </React.Fragment>\n  );\n};\n\n//style for background\n//card style when a location is\n//selected by user\nconst style = {\n  boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.5), 0 6px 20px 0 rgba(0, 0, 0, 0.5)\",\n};\n\nclass Card extends React.Component {\n  state = {\n    selector: \"location\",\n  };\n\n  cardRef = React.createRef();\n\n  componentDidMount() {\n    const { record } = this.props;\n    this.props.handleCardRef(this.cardRef, record.id);\n  }\n\n  render() {\n    const {\n      record,\n      selectedListing,\n      updateListing,\n      handleCardClick,\n      handleCardSave,\n      savedDataId,\n      showMapDetail,\n    } = this.props;\n\n    const textMap = {\n      parsedCategory: record.main_category,\n      parsedListing: record.listing,\n      parsedPhone: cardPhoneTextFilter(record),\n      parsedWeb: cardWebAddressFixer(record.website),\n      parsedStreet: `${cardTextFilter(record.street)} ${cardTextFilter(\n        record.street2\n      )}`.trim(),\n      parsedCity: `${record.city}, OR ${record.postal_code}`,\n      parsedDescription: cardTextFilter(record.service_description),\n      parsedHours: cardTextFilter(record.hours),\n      parsedCOVID: cardTextFilter(record.emergency_message),\n    };\n\n    return (\n      <div className=\"card-map-container\">\n        <div\n          ref={this.cardRef}\n          className=\"card-container\"\n          style={record.id === selectedListing ? style : null}\n        >\n          <div className=\"card-header\">\n            <div className=\"card-category\">{textMap.parsedCategory}</div>\n            {textMap.parsedCOVID === \"CLOSED DUE TO COVID\" ? (\n              <div className=\"covid-item\">{textMap.parsedCOVID}</div>\n            ) : null}\n          </div>\n          <div className=\"card-header\">\n            <div\n              className=\"card-listing\"\n              style={\n                selectedListing === record.id\n                  ? {\n                      color: \"#27a727\",\n                      fontWeight: \"bolder\",\n                    }\n                  : null\n              }\n            >\n              {textMap.parsedListing}\n            </div>\n            <div className=\"spacer\" />\n            {record.lat !== \"NA\" || record.lon !== \"NA\" ? (\n              <button\n                className=\"card-save-button\"\n                data-tip=\"Show on map.\"\n                data-for=\"show-listing-tooltip\"\n                onClick={() => {\n                  handleCardClick(this.cardRef, record.id);\n                  updateListing(record.id, \"card\");\n                }}\n              >\n                <FontAwesomeIcon\n                  icon=\"map-marker\"\n                  size=\"sm\"\n                  style={\n                    selectedListing === record.id ? { color: \"#27a727\" } : null\n                  }\n                />\n                Show\n                <ReactTooltip\n                  id=\"show-listing-tooltip\"\n                  place=\"top\"\n                  type=\"dark\"\n                  effect=\"solid\"\n                />\n              </button>\n            ) : null}\n            {!showMapDetail ? (\n              <MediaQuery query=\"(min-width: 993px)\">\n                <button\n                  className=\"card-save-button\"\n                  data-tip=\"Save listing, print later.\"\n                  data-for=\"save-tooltip\"\n                  onClick={() => handleCardSave(record.id)}\n                >\n                  <FontAwesomeIcon\n                    icon=\"save\"\n                    size=\"sm\"\n                    style={\n                      savedDataId.indexOf(record.id) > -1\n                        ? { color: \"green\" }\n                        : null\n                    }\n                  />\n                  Save\n                  <ReactTooltip\n                    id=\"save-tooltip\"\n                    place=\"top\"\n                    type=\"dark\"\n                    effect=\"solid\"\n                  />\n                </button>\n              </MediaQuery>\n            ) : null}\n          </div>\n          <div className=\"card-street\">\n            {!(textMap.parsedStreet === \"\") ? (\n              <div>\n                {textMap.parsedStreet} <br />\n                {textMap.parsedCity} <br />\n                {/* if the distance is not null then return it in the card */}\n                {record.distance !== null ? (\n                  <div className=\"card-distance\">\n                    <FontAwesomeIcon\n                      className=\"card-map-marker\"\n                      icon=\"map-marker\"\n                      size=\"sm\"\n                    />\n                    {`${Number(record.distance.toFixed(2))} miles`}\n                    <br />\n                  </div>\n                ) : null}\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href={\"//www.google.com/maps/dir/\" + record.directionsUrl}\n                >\n                  Get Directions\n                </a>\n              </div>\n            ) : (\n              <div className=\"card-undisclosed\">Undisclosed Location</div>\n            )}\n          </div>\n          <div className=\"covid-item covid-temp-listing\">\n            {textMap.parsedCOVID === \"TEMPORARY COVID RESPONSE SERVICE\"\n              ? textMap.parsedCOVID\n              : null}\n          </div>\n          <div className=\"card-phone-container\">\n            {textMap.parsedPhone ? (\n              <div>\n                <FontAwesomeIcon icon={\"phone\"} className=\"phone-icon\" />\n                {textMap.parsedPhone.map((phone, index) => {\n                  return (\n                    <div key={`${phone.phone}-${index}`} className=\"card-phone\">\n                      <span>{`${phone.type}: `}</span>\n                      {phone.phone}\n                    </div>\n                  );\n                })}\n              </div>\n            ) : null}\n          </div>\n          <div className=\"card-web-container\">\n            {textMap.parsedWeb ? (\n              <div>\n                <FontAwesomeIcon icon={\"globe\"} />\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href={textMap.parsedWeb}\n                >\n                  {\" website\"}\n                </a>\n              </div>\n            ) : null}\n          </div>\n          {!(textMap.parsedDescription === \"\") ? (\n            <div className=\"card-item\">\n              <div className=\"card-title\">Service Description:</div>\n              <div className=\"card-content\">{textMap.parsedDescription}</div>\n            </div>\n          ) : null}\n          {!(textMap.parsedCOVID ===\"ClOSED DUE TO COVID\")? (\n              <div className=\"covid-item\">{textMap.parsedCOVID}</div>\n            ) : null}\n          {!(textMap.parsedHours === \"\") ? (\n            <div className=\"card-item\">\n              <div className=\"card-title-flex\">\n                <div>Hours:</div>\n                <div className=\"covid-item\">\n                  {textMap.parsedCOVID === \"HOURS CHANGED DUE TO COVID\"\n                    ? textMap.parsedCOVID\n                    : null}\n                </div>\n              </div>\n              <div className=\"card-content\">\n                {textMap.parsedCOVID === \"CLOSED DUE TO COVID\" ? (\n                  <div className=\"covid-item\">CLOSED</div>\n                ) : (\n                  textMap.parsedHours\n                )}\n              </div>\n            </div>\n          ) : null}\n        </div>\n        {showMapDetail ? (\n          <div className=\"map-details-container\">\n            {record.lat !== \"NA\" ? (\n              <DetailMap coords={[Number(record.lat), Number(record.lon)]} />\n            ) : null}\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nclass Cards extends React.Component {\n  state = { currentCardRef: null, cardRefs: [] };\n\n  cardScrollToCard = (cardRef) => {\n    //the card is on the first element of the\n    //the cardRef array\n    window.scrollTo({\n      top: cardRef[0][0].offsetTop - 60,\n      behavior: \"smooth\",\n    });\n  };\n\n  handleCardRef = (ref, id) => {\n    //build up the state array without directly mutating state\n    this.setState((prevState) => ({\n      cardRefs: [...prevState.cardRefs, [ref.current, id]],\n    }));\n  };\n\n  handleCardClick = (cardRef, id) => {\n    this.setState(() => ({ currentCardRef: [cardRef.current, id] }));\n  };\n\n  undisclosedCounter = (data) => {\n    let counter = 0;\n    for (let i = 0; i < data.length; i++) {\n      if (data[i].street === \"NA\") {\n        counter += 1;\n      }\n    }\n    return counter;\n  };\n\n  componentDidUpdate(prevProps) {\n    const { cardRefs } = this.state;\n    const { selectedListing, clickType } = this.props;\n\n    const currentCard = cardRefs.filter((ref) => ref[1] === selectedListing);\n    if (this.props.selectedListing !== prevProps.selectedListing) {\n      if (\n        window.matchMedia(\"(max-width: 992px)\").matches &&\n        clickType === \"popup\"\n      ) {\n        this.cardScrollToCard(currentCard);\n      }\n      if (\n        window.matchMedia(\"(max-width: 992px)\").matches &&\n        clickType === \"card\"\n      ) {\n        window.scrollTo({ top: 0, behavior: \"smooth\" });\n      }\n      if (window.matchMedia(\"(min-width: 993px)\").matches) {\n        this.cardScrollToCard(currentCard);\n      }\n    }\n  }\n\n  render() {\n    const {\n      data,\n      selectedListing,\n      updateListing,\n      handleCardSave,\n      savedDataId,\n      showMapDetail,\n    } = this.props;\n    return (\n      // the cards container should scroll on its own\n      <div className=\"cards-container\">\n        <CountBar savedDataId={savedDataId} data={data} />\n\n        {cardSortByDistance(data).map((record, index) => (\n          <Card\n            key={`${record.id}-${index}`}\n            record={record}\n            selectedListing={selectedListing}\n            updateListing={updateListing}\n            handleCardSave={handleCardSave}\n            handleCardClick={this.handleCardClick}\n            handleCardRef={this.handleCardRef}\n            savedDataId={savedDataId}\n            showMapDetail={showMapDetail}\n          />\n        ))}\n        <MediaQuery query=\"(max-width: 992px)\">\n          <ScrollUpButton\n            StopPosition={0}\n            ShowAtPosition={150}\n            EasingType=\"easeOutCubic\"\n            AnimationDuration={500}\n            // ContainerClassName=\"ScrollUpButton__Container\"\n            // TransitionClassName=\"ScrollUpButton__Toggled\"\n            style={{ left: \"50%\", bottom: \"35px\", right: \"50%\" }}\n            ToggledStyle={{}}\n          />\n        </MediaQuery>\n        <MediaQuery query=\"(min-width: 993px)\">\n          <ScrollUpButton\n            StopPosition={0}\n            ShowAtPosition={150}\n            EasingType=\"easeOutCubic\"\n            AnimationDuration={500}\n            // ContainerClassName=\"ScrollUpButton__Container\"\n            // TransitionClassName=\"ScrollUpButton__Toggled\"\n            style={{ left: \"240px\", bottom: \"35px\" }}\n            ToggledStyle={{}}\n          />\n        </MediaQuery>\n      </div>\n    );\n  }\n}\n\nexport default Cards;\n"]},"metadata":{},"sourceType":"module"}