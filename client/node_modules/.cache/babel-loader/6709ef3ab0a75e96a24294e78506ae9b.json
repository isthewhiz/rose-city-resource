{"ast":null,"code":"var _jsxFileName = \"/home/isnardo/rcr/rose-city-resource/client/src/components/Home/SearchBar.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Link } from \"react-router-dom\";\nimport LinkButton from \"./LinkButton\";\nimport \"./Home.css\";\nimport { getFilteredSearchList, queryBuilder } from \"../../utils/api\"; //need this to use the react portal\n\nconst modalRoot = document.getElementById(\"modal-root\");\n\nclass AdvancedSearchModal extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      categoryVals: [],\n      parentVals: [],\n      selection: \"Category\"\n    };\n\n    this.toggleCheckedValue = (val, selection) => {\n      if (selection === \"Category\") {\n        const categoryVals = [...this.state.categoryVals];\n        const index = categoryVals.indexOf(val); // get index to determine if the aray gets spliced.\n\n        if (index === -1) {\n          //add to the list\n          this.setState({\n            categoryVals: [...categoryVals, val]\n          });\n        } else {\n          //remove from list\n          categoryVals.splice(index, 1);\n          this.setState({\n            categoryVals\n          });\n        }\n      } else {\n        const parentVals = [...this.state.parentVals];\n        const index = parentVals.indexOf(val); // get index to determine if the aray gets spliced.\n\n        if (index === -1) {\n          //add to the list\n          this.setState({\n            parentVals: [...parentVals, val]\n          });\n        } else {\n          //remove from list\n          parentVals.splice(index, 1);\n          this.setState({\n            parentVals\n          });\n        }\n      }\n    };\n\n    this.selectCategory = () => {\n      this.setState({\n        selection: \"Category\"\n      });\n    };\n\n    this.selectOrganization = () => {\n      this.setState({\n        selection: \"Organization\"\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const {\n        categoryVals\n      } = this.state;\n      console.log(\"Final Search Vals\", categoryVals);\n    };\n\n    this.handleNoSelection = event => {\n      const {\n        categoryVals,\n        parentVals\n      } = this.state;\n\n      if (categoryVals < 1 && parentVals < 1) {\n        event.preventDefault();\n        alert(\"Please make a selection.\");\n      }\n    };\n  }\n\n  componentDidMount() {\n    //this seems hacky.  There must be a better way...SO?\n    document.getElementsByTagName(\"body\")[0].style.overflow = \"hidden\";\n  }\n\n  componentWillUnmount() {\n    document.getElementsByTagName(\"body\")[0].style.overflow = \"visible\";\n  }\n\n  render() {\n    //will likely be able to get rid of the match that was passed dow the tree\n    const {\n      searchData,\n      onClose\n    } = this.props;\n    const {\n      categoryVals,\n      parentVals,\n      selection\n    } = this.state;\n    const generalCats = Object.keys(searchData.general);\n    const mainCatsMap = searchData.main;\n    const parentCats = Object.keys(searchData.parent).sort(); //style for the category selector\n\n    const styles = {\n      selection: {\n        color: \"#FC3C3C\"\n      }\n    };\n    return ReactDOM.createPortal(\n    /*#__PURE__*/\n    // loop through the search data keys to populate the\n    //advanced search\n    React.createElement(\"div\", {\n      className: \"modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-search-heading-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-heading-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, \"Search by \", `${selection}`), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search-nav-container-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-heading-button\",\n      onClick: onClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"modal-heading-divider\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: `/results`,\n        search: queryBuilder(categoryVals, parentVals)\n      },\n      onClick: this.handleNoSelection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-heading-button\",\n      onClick: onClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, \"Apply\")))), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search-nav-container-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-search-category\",\n      onClick: this.selectCategory,\n      style: selection === \"Category\" ? styles.selection : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: \"angle-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    }), \"Category\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"modal-heading-divider\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-search-organization\",\n      onClick: this.selectOrganization,\n      style: selection === \"Organization\" ? styles.selection : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, \"Organization\", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: \"angle-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 15\n      }\n    }))), selection === \"Category\" ? /*#__PURE__*/React.createElement(\"form\", {\n      className: \"modal-search-container\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    }, generalCats.map(genCat => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: genCat,\n        className: \"modal-search-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"modal-search-item-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }\n      }, genCat), Object.keys(mainCatsMap[genCat]).map(mainCat => {\n        return /*#__PURE__*/React.createElement(React.Fragment, {\n          key: mainCat,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          className: \"advanced-container\",\n          htmlFor: mainCat,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 27\n          }\n        }, mainCat, /*#__PURE__*/React.createElement(\"input\", {\n          id: mainCat,\n          type: \"checkbox\",\n          name: mainCat,\n          value: mainCat,\n          onChange: val => this.toggleCheckedValue(val.target.value, selection),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"checkmark\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 29\n          }\n        })));\n      }));\n    })) : /*#__PURE__*/React.createElement(\"form\", {\n      className: \"modal-search-container\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }\n    }, parentCats.map(parentCat => {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        key: parentCat,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"advanced-container\",\n        htmlFor: parentCat,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }\n      }, parentCat, /*#__PURE__*/React.createElement(\"input\", {\n        id: parentCat,\n        type: \"checkbox\",\n        name: parentCat,\n        value: parentCat,\n        onChange: val => this.toggleCheckedValue(val.target.value, selection),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"checkmark\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 23\n        }\n      })));\n    })))), modalRoot);\n  }\n\n}\n\nAdvancedSearchModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  searchData: PropTypes.object.isRequired\n};\nexport default class SearchBar extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchValue: \"\",\n      filterSearchList: null,\n      //haven't used the filter search list yet\n      showAdvSearchModal: false //this is for the advanced search box\n\n    };\n\n    this.handleChange = event => {\n      const value = event.target.value;\n      this.setState(() => ({\n        searchValue: value\n      }));\n    };\n\n    this.handleSubmit = event => {\n      //we use event.prevetDefault so that the submit doesn't go to a server\n      event.preventDefault();\n      console.log(this.state.searchValue);\n    };\n\n    this.toggleAdvSearchModal = () => {\n      this.setState(prevState => ({\n        showAdvSearchModal: !prevState.showAdvSearchModal\n      }));\n    };\n\n    this.handleAdvSearchCloseModal = () => this.setState({\n      showAdvSearchModal: false\n    });\n  }\n\n  render() {\n    const {\n      searchValue,\n      showAdvSearchModal\n    } = this.state;\n    const {\n      nodeData,\n      searchData,\n      match\n    } = this.props;\n    const searchCats = [\"general_category\", \"main_category\", \"parent_organization\", \"listing\"];\n    const searchList = getFilteredSearchList(searchCats, nodeData);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"\",\n      onSubmit: this.handleSubmit,\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"search-input\",\n      id: \"search-item\",\n      placeholder: \"Search...\",\n      type: \"text\",\n      autoComplete: \"off\" //bind the value of our state to the input field\n      ,\n      value: searchValue,\n      onChange: this.handleChange,\n      list: \"data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"datalist\", {\n      id: \"data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }\n    }, searchList.map(item => /*#__PURE__*/React.createElement(\"option\", {\n      key: item,\n      value: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(LinkButton, {\n      className: \"search-button\",\n      to: `/results?search=${searchValue}`,\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: \"search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"advanced-search\",\n      onClick: this.toggleAdvSearchModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }\n    }, \"Advanced Search\"), showAdvSearchModal ? /*#__PURE__*/React.createElement(AdvancedSearchModal, {\n      onClose: this.handleAdvSearchCloseModal,\n      searchData: searchData,\n      match: match // this was passed down via React router\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 11\n      }\n    }) : null);\n  }\n\n}\nSearchBar.propTypes = {\n  nodeData: PropTypes.array.isRequired,\n  searchData: PropTypes.object.isRequired\n};","map":{"version":3,"sources":["/home/isnardo/rcr/rose-city-resource/client/src/components/Home/SearchBar.js"],"names":["React","ReactDOM","PropTypes","FontAwesomeIcon","Link","LinkButton","getFilteredSearchList","queryBuilder","modalRoot","document","getElementById","AdvancedSearchModal","Component","state","categoryVals","parentVals","selection","toggleCheckedValue","val","index","indexOf","setState","splice","selectCategory","selectOrganization","handleSubmit","event","preventDefault","console","log","handleNoSelection","alert","componentDidMount","getElementsByTagName","style","overflow","componentWillUnmount","render","searchData","onClose","props","generalCats","Object","keys","general","mainCatsMap","main","parentCats","parent","sort","styles","color","createPortal","pathname","search","map","genCat","mainCat","target","value","parentCat","propTypes","func","isRequired","object","SearchBar","searchValue","filterSearchList","showAdvSearchModal","handleChange","toggleAdvSearchModal","prevState","handleAdvSearchCloseModal","nodeData","match","searchCats","searchList","width","item","array"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Link } from \"react-router-dom\";\nimport LinkButton from \"./LinkButton\";\nimport \"./Home.css\";\nimport { getFilteredSearchList, queryBuilder } from \"../../utils/api\";\n\n//need this to use the react portal\nconst modalRoot = document.getElementById(\"modal-root\");\n\nclass AdvancedSearchModal extends React.Component {\n  static propTypes = {\n    onClose: PropTypes.func.isRequired,\n    searchData: PropTypes.object.isRequired,\n  };\n\n  state = {\n    categoryVals: [],\n    parentVals: [],\n    selection: \"Category\",\n  };\n\n  // this needs to be refratored a bit to be more DRY\n  toggleCheckedValue = (val, selection) => {\n    if (selection === \"Category\") {\n      const categoryVals = [...this.state.categoryVals];\n      const index = categoryVals.indexOf(val); // get index to determine if the aray gets spliced.\n      if (index === -1) {\n        //add to the list\n        this.setState({ categoryVals: [...categoryVals, val] });\n      } else {\n        //remove from list\n        categoryVals.splice(index, 1);\n        this.setState({ categoryVals });\n      }\n    } else {\n      const parentVals = [...this.state.parentVals];\n      const index = parentVals.indexOf(val); // get index to determine if the aray gets spliced.\n      if (index === -1) {\n        //add to the list\n        this.setState({ parentVals: [...parentVals, val] });\n      } else {\n        //remove from list\n        parentVals.splice(index, 1);\n        this.setState({ parentVals });\n      }\n    }\n  };\n\n  selectCategory = () => {\n    this.setState({ selection: \"Category\" });\n  };\n\n  selectOrganization = () => {\n    this.setState({ selection: \"Organization\" });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { categoryVals } = this.state;\n    console.log(\"Final Search Vals\", categoryVals);\n  };\n\n  handleNoSelection = (event) => {\n    const { categoryVals, parentVals } = this.state;\n    if (categoryVals < 1 && parentVals < 1) {\n      event.preventDefault();\n      alert(\"Please make a selection.\");\n    }\n  };\n\n  componentDidMount() {\n    //this seems hacky.  There must be a better way...SO?\n    document.getElementsByTagName(\"body\")[0].style.overflow = \"hidden\";\n  }\n\n  componentWillUnmount() {\n    document.getElementsByTagName(\"body\")[0].style.overflow = \"visible\";\n  }\n\n  render() {\n    //will likely be able to get rid of the match that was passed dow the tree\n    const { searchData, onClose } = this.props;\n    const { categoryVals, parentVals, selection } = this.state;\n\n    const generalCats = Object.keys(searchData.general);\n    const mainCatsMap = searchData.main;\n    const parentCats = Object.keys(searchData.parent).sort();\n\n    //style for the category selector\n    const styles = { selection: { color: \"#FC3C3C\" } };\n\n    return ReactDOM.createPortal(\n      // loop through the search data keys to populate the\n      //advanced search\n      <div className=\"modal\">\n        <div className=\"modal-box\">\n          <div className=\"modal-search-heading-container\">\n            <div className=\"modal-heading-title\">\n              Search by {`${selection}`}\n            </div>\n\n            <div className=\"search-nav-container-2\">\n              <div className=\"modal-heading-button\" onClick={onClose}>\n                Cancel\n              </div>\n              <span className=\"modal-heading-divider\" />\n              <Link\n                to={{\n                  pathname: `/results`,\n                  search: queryBuilder(categoryVals, parentVals),\n                }}\n                onClick={this.handleNoSelection}\n              >\n                <div className=\"modal-heading-button\" onClick={onClose}>\n                  Apply\n                </div>\n              </Link>\n            </div>\n          </div>\n          <hr />\n          <div className=\"search-nav-container-1\">\n            <div\n              className=\"modal-search-category\"\n              onClick={this.selectCategory}\n              style={selection === \"Category\" ? styles.selection : null}\n            >\n              <FontAwesomeIcon icon={\"angle-left\"} />\n              Category\n            </div>\n            <span className=\"modal-heading-divider\" />\n            <div\n              className=\"modal-search-organization\"\n              onClick={this.selectOrganization}\n              style={selection === \"Organization\" ? styles.selection : null}\n            >\n              Organization\n              <FontAwesomeIcon icon={\"angle-right\"} />\n            </div>\n          </div>\n          {/* --------------------------------------------------------------------- */}\n          {selection === \"Category\" ? (\n            <form\n              className=\"modal-search-container\"\n              onSubmit={this.handleSubmit}\n            >\n              {generalCats.map((genCat) => {\n                return (\n                  <div key={genCat} className=\"modal-search-item\">\n                    <div className=\"modal-search-item-title\">{genCat}</div>\n                    {Object.keys(mainCatsMap[genCat]).map((mainCat) => {\n                      return (\n                        <React.Fragment key={mainCat}>\n                          <label\n                            className=\"advanced-container\"\n                            htmlFor={mainCat}\n                          >\n                            {mainCat}\n                            <input\n                              id={mainCat}\n                              type=\"checkbox\"\n                              name={mainCat}\n                              value={mainCat}\n                              onChange={(val) =>\n                                this.toggleCheckedValue(\n                                  val.target.value,\n                                  selection\n                                )\n                              }\n                            />\n                            <span className=\"checkmark\" />\n                          </label>\n                        </React.Fragment>\n                      );\n                    })}\n                  </div>\n                );\n              })}\n            </form>\n          ) : (\n            <form\n              className=\"modal-search-container\"\n              onSubmit={this.handleSubmit}\n            >\n              {parentCats.map((parentCat) => {\n                return (\n                  <React.Fragment key={parentCat}>\n                    <label className=\"advanced-container\" htmlFor={parentCat}>\n                      {parentCat}\n                      <input\n                        id={parentCat}\n                        type=\"checkbox\"\n                        name={parentCat}\n                        value={parentCat}\n                        onChange={(val) =>\n                          this.toggleCheckedValue(val.target.value, selection)\n                        }\n                      />\n                      <span className=\"checkmark\" />\n                    </label>\n                  </React.Fragment>\n                );\n              })}\n            </form>\n          )}\n        </div>\n      </div>,\n      modalRoot\n    );\n  }\n}\n\nexport default class SearchBar extends React.Component {\n  static propTypes = {\n    nodeData: PropTypes.array.isRequired,\n    searchData: PropTypes.object.isRequired,\n  };\n\n  state = {\n    searchValue: \"\",\n    filterSearchList: null, //haven't used the filter search list yet\n    showAdvSearchModal: false, //this is for the advanced search box\n  };\n\n  //for whan a user startt to enter seach item\n  handleChange = (event) => {\n    const value = event.target.value;\n    this.setState(() => ({ searchValue: value }));\n  };\n\n  //run when the user submits the search\n  handleSubmit = (event) => {\n    //we use event.prevetDefault so that the submit doesn't go to a server\n    event.preventDefault();\n    console.log(this.state.searchValue);\n  };\n\n  toggleAdvSearchModal = () => {\n    this.setState((prevState) => ({\n      showAdvSearchModal: !prevState.showAdvSearchModal,\n    }));\n  };\n\n  handleAdvSearchCloseModal = () =>\n    this.setState({ showAdvSearchModal: false });\n\n  render() {\n    const { searchValue, showAdvSearchModal } = this.state;\n    const { nodeData, searchData, match } = this.props;\n\n    const searchCats = [\n      \"general_category\",\n      \"main_category\",\n      \"parent_organization\",\n      \"listing\",\n    ];\n\n    const searchList = getFilteredSearchList(searchCats, nodeData);\n\n    return (\n      <div className=\"search-bar\">\n        <form\n          className=\"\"\n          onSubmit={this.handleSubmit}\n          style={{ width: \"100%\" }}\n        >\n          <input\n            className=\"search-input\"\n            id=\"search-item\"\n            placeholder=\"Search...\"\n            type=\"text\"\n            autoComplete=\"off\"\n            //bind the value of our state to the input field\n            value={searchValue}\n            onChange={this.handleChange}\n            list=\"data\"\n          />\n          {/* loop through the list of options */}\n          <datalist id=\"data\">\n            {searchList.map((item) => (\n              <option key={item} value={item} />\n            ))}\n          </datalist>\n          {/* <Link\n            to={{\n              pathname: `/results`,\n              search: `?search=${searchValue}`\n            }}\n          >\n            <button className=\"search-button\" type=\"submit\" disabled={false}>\n              <FontAwesomeIcon icon=\"search\" onClick={this.handleSubmit} />\n            </button>\n          </Link> */}\n          <LinkButton\n            className=\"search-button\"\n            to={`/results?search=${searchValue}`}\n            onClick={this.handleSubmit}\n          >\n            <FontAwesomeIcon icon=\"search\" />\n          </LinkButton>\n        </form>\n        <div className=\"advanced-search\" onClick={this.toggleAdvSearchModal}>\n          Advanced Search\n        </div>\n        {showAdvSearchModal ? (\n          <AdvancedSearchModal\n            onClose={this.handleAdvSearchCloseModal}\n            searchData={searchData}\n            match={match} // this was passed down via React router\n          />\n        ) : null}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}