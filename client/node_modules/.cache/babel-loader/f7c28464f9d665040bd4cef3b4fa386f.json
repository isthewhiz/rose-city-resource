{"ast":null,"code":"var _jsxFileName = \"/home/isnardo/rcr/rose-city-resource/client/src/components/Details.js\";\nimport React from 'react';\nimport queryString from 'query-string';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Cards from './Results/Cards';\nimport { cardDetailsFilter, directionsUrlBuilder } from './../utils/api';\nconst styles = {\n  faIcon: {\n    color: '#393f48',\n    marginRight: '5px'\n  }\n};\n\nclass Details extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cardDetailsData: null\n    };\n  }\n\n  componentDidMount() {\n    const {\n      nodeData\n    } = this.props;\n    const queryVals = queryString.parse(this.props.location.search);\n    const detailsData = cardDetailsFilter(nodeData, queryVals.saved); // this logic should be in utils\n    // but I need to refactor the way I used\n    // the directionsUrlBuilder\n\n    const cardDetailsData = detailsData.map(record => {\n      const directionsUrl = directionsUrlBuilder(record.street, record.city, record.postal_code);\n      return Object.assign(record, {\n        directionsUrl\n      });\n    });\n    this.setState(() => ({\n      cardDetailsData\n    }));\n  }\n\n  render() {\n    const {\n      savedDataId,\n      handleCardSave\n    } = this.props;\n    const {\n      cardDetailsData\n    } = this.state;\n\n    if (cardDetailsData !== null) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"details-outer-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"details-inner-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"print-details-button\",\n        onClick: () => {\n          window.print();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        style: styles.faIcon,\n        icon: \"print\",\n        size: \"sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }\n      }), \"Print Results\"), /*#__PURE__*/React.createElement(Cards, {\n        data: this.state.cardDetailsData,\n        selectedListing: '',\n        updateListing: null,\n        handleCardSave: handleCardSave,\n        savedDataId: savedDataId,\n        showMapDetail: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      })));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 14\n        }\n      }, \"loading\");\n    }\n  }\n\n}\n\nexport default Details;","map":{"version":3,"sources":["/home/isnardo/rcr/rose-city-resource/client/src/components/Details.js"],"names":["React","queryString","FontAwesomeIcon","Cards","cardDetailsFilter","directionsUrlBuilder","styles","faIcon","color","marginRight","Details","Component","state","cardDetailsData","componentDidMount","nodeData","props","queryVals","parse","location","search","detailsData","saved","map","record","directionsUrl","street","city","postal_code","Object","assign","setState","render","savedDataId","handleCardSave","window","print"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,SAASC,iBAAT,EAA4BC,oBAA5B,QAAwD,gBAAxD;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE;AACNC,IAAAA,KAAK,EAAE,SADD;AAENC,IAAAA,WAAW,EAAE;AAFP;AADK,CAAf;;AAOA,MAAMC,OAAN,SAAsBV,KAAK,CAACW,SAA5B,CAAsC;AAAA;AAAA;AAAA,SACpCC,KADoC,GAC5B;AAAEC,MAAAA,eAAe,EAAE;AAAnB,KAD4B;AAAA;;AAGpCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKC,KAA1B;AACA,UAAMC,SAAS,GAAGhB,WAAW,CAACiB,KAAZ,CAAkB,KAAKF,KAAL,CAAWG,QAAX,CAAoBC,MAAtC,CAAlB;AACA,UAAMC,WAAW,GAAGjB,iBAAiB,CAACW,QAAD,EAAWE,SAAS,CAACK,KAArB,CAArC,CAHkB,CAIlB;AACA;AACA;;AACA,UAAMT,eAAe,GAAGQ,WAAW,CAACE,GAAZ,CAAgBC,MAAM,IAAI;AAChD,YAAMC,aAAa,GAAGpB,oBAAoB,CACxCmB,MAAM,CAACE,MADiC,EAExCF,MAAM,CAACG,IAFiC,EAGxCH,MAAM,CAACI,WAHiC,CAA1C;AAKA,aAAOC,MAAM,CAACC,MAAP,CAAcN,MAAd,EAAsB;AAAEC,QAAAA;AAAF,OAAtB,CAAP;AACD,KAPuB,CAAxB;AASA,SAAKM,QAAL,CAAc,OAAO;AAAElB,MAAAA;AAAF,KAAP,CAAd;AACD;;AACDmB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAkC,KAAKlB,KAA7C;AACA,UAAM;AAAEH,MAAAA;AAAF,QAAsB,KAAKD,KAAjC;;AACA,QAAIC,eAAe,KAAK,IAAxB,EAA8B;AAC5B,0BACE;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AACE,QAAA,SAAS,EAAC,sBADZ;AAEE,QAAA,OAAO,EAAE,MAAM;AACbsB,UAAAA,MAAM,CAACC,KAAP;AACD,SAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAME,oBAAC,eAAD;AAAiB,QAAA,KAAK,EAAE9B,MAAM,CAACC,MAA/B;AAAuC,QAAA,IAAI,EAAC,OAA5C;AAAoD,QAAA,IAAI,EAAC,IAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,kBADF,eAUE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAE,KAAKK,KAAL,CAAWC,eADnB;AAEE,QAAA,eAAe,EAAE,EAFnB;AAGE,QAAA,aAAa,EAAE,IAHjB;AAIE,QAAA,cAAc,EAAEqB,cAJlB;AAKE,QAAA,WAAW,EAAED,WALf;AAME,QAAA,aAAa,EAAE,IANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,CADF,CADF;AAuBD,KAxBD,MAwBO;AACL,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACD;AACF;;AAnDmC;;AAqDtC,eAAevB,OAAf","sourcesContent":["import React from 'react';\nimport queryString from 'query-string';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Cards from './Results/Cards';\nimport { cardDetailsFilter, directionsUrlBuilder } from './../utils/api';\n\nconst styles = {\n  faIcon: {\n    color: '#393f48',\n    marginRight: '5px'\n  }\n};\n\nclass Details extends React.Component {\n  state = { cardDetailsData: null };\n\n  componentDidMount() {\n    const { nodeData } = this.props;\n    const queryVals = queryString.parse(this.props.location.search);\n    const detailsData = cardDetailsFilter(nodeData, queryVals.saved);\n    // this logic should be in utils\n    // but I need to refactor the way I used\n    // the directionsUrlBuilder\n    const cardDetailsData = detailsData.map(record => {\n      const directionsUrl = directionsUrlBuilder(\n        record.street,\n        record.city,\n        record.postal_code\n      );\n      return Object.assign(record, { directionsUrl });\n    });\n\n    this.setState(() => ({ cardDetailsData }));\n  }\n  render() {\n    const { savedDataId, handleCardSave } = this.props;\n    const { cardDetailsData } = this.state;\n    if (cardDetailsData !== null) {\n      return (\n        <div className=\"details-outer-container\">\n          <div className=\"details-inner-container\">\n            <div\n              className=\"print-details-button\"\n              onClick={() => {\n                window.print();\n              }}\n            >\n              <FontAwesomeIcon style={styles.faIcon} icon=\"print\" size=\"sm\" />\n              Print Results\n            </div>\n            <Cards\n              data={this.state.cardDetailsData}\n              selectedListing={''}\n              updateListing={null}\n              handleCardSave={handleCardSave}\n              savedDataId={savedDataId}\n              showMapDetail={true}\n            />\n          </div>\n        </div>\n      );\n    } else {\n      return <div>loading</div>;\n    }\n  }\n}\nexport default Details;\n"]},"metadata":{},"sourceType":"module"}