{"ast":null,"code":"import L from 'leaflet';\nexport var LatLng = L.Class.extend({\n  options: {\n    // the next geocoder to use\n    next: undefined,\n    sizeInMeters: 10000\n  },\n  initialize: function (options) {\n    L.Util.setOptions(this, options);\n  },\n  geocode: function (query, cb, context) {\n    var match;\n    var center; // regex from https://github.com/openstreetmap/openstreetmap-website/blob/master/app/controllers/geocoder_controller.rb\n\n    if (match = query.match(/^([NS])\\s*(\\d{1,3}(?:\\.\\d*)?)\\W*([EW])\\s*(\\d{1,3}(?:\\.\\d*)?)$/)) {\n      // [NSEW] decimal degrees\n      center = L.latLng((/N/i.test(match[1]) ? 1 : -1) * parseFloat(match[2]), (/E/i.test(match[3]) ? 1 : -1) * parseFloat(match[4]));\n    } else if (match = query.match(/^(\\d{1,3}(?:\\.\\d*)?)\\s*([NS])\\W*(\\d{1,3}(?:\\.\\d*)?)\\s*([EW])$/)) {\n      // decimal degrees [NSEW]\n      center = L.latLng((/N/i.test(match[2]) ? 1 : -1) * parseFloat(match[1]), (/E/i.test(match[4]) ? 1 : -1) * parseFloat(match[3]));\n    } else if (match = query.match(/^([NS])\\s*(\\d{1,3})°?\\s*(\\d{1,3}(?:\\.\\d*)?)?['′]?\\W*([EW])\\s*(\\d{1,3})°?\\s*(\\d{1,3}(?:\\.\\d*)?)?['′]?$/)) {\n      // [NSEW] degrees, decimal minutes\n      center = L.latLng((/N/i.test(match[1]) ? 1 : -1) * (parseFloat(match[2]) + parseFloat(match[3] / 60)), (/E/i.test(match[4]) ? 1 : -1) * (parseFloat(match[5]) + parseFloat(match[6] / 60)));\n    } else if (match = query.match(/^(\\d{1,3})°?\\s*(\\d{1,3}(?:\\.\\d*)?)?['′]?\\s*([NS])\\W*(\\d{1,3})°?\\s*(\\d{1,3}(?:\\.\\d*)?)?['′]?\\s*([EW])$/)) {\n      // degrees, decimal minutes [NSEW]\n      center = L.latLng((/N/i.test(match[3]) ? 1 : -1) * (parseFloat(match[1]) + parseFloat(match[2] / 60)), (/E/i.test(match[6]) ? 1 : -1) * (parseFloat(match[4]) + parseFloat(match[5] / 60)));\n    } else if (match = query.match(/^([NS])\\s*(\\d{1,3})°?\\s*(\\d{1,2})['′]?\\s*(\\d{1,3}(?:\\.\\d*)?)?[\"″]?\\W*([EW])\\s*(\\d{1,3})°?\\s*(\\d{1,2})['′]?\\s*(\\d{1,3}(?:\\.\\d*)?)?[\"″]?$/)) {\n      // [NSEW] degrees, minutes, decimal seconds\n      center = L.latLng((/N/i.test(match[1]) ? 1 : -1) * (parseFloat(match[2]) + parseFloat(match[3] / 60 + parseFloat(match[4] / 3600))), (/E/i.test(match[5]) ? 1 : -1) * (parseFloat(match[6]) + parseFloat(match[7] / 60) + parseFloat(match[8] / 3600)));\n    } else if (match = query.match(/^(\\d{1,3})°?\\s*(\\d{1,2})['′]?\\s*(\\d{1,3}(?:\\.\\d*)?)?[\"″]\\s*([NS])\\W*(\\d{1,3})°?\\s*(\\d{1,2})['′]?\\s*(\\d{1,3}(?:\\.\\d*)?)?[\"″]?\\s*([EW])$/)) {\n      // degrees, minutes, decimal seconds [NSEW]\n      center = L.latLng((/N/i.test(match[4]) ? 1 : -1) * (parseFloat(match[1]) + parseFloat(match[2] / 60 + parseFloat(match[3] / 3600))), (/E/i.test(match[8]) ? 1 : -1) * (parseFloat(match[5]) + parseFloat(match[6] / 60) + parseFloat(match[7] / 3600)));\n    } else if (match = query.match(/^\\s*([+-]?\\d+(?:\\.\\d*)?)\\s*[\\s,]\\s*([+-]?\\d+(?:\\.\\d*)?)\\s*$/)) {\n      center = L.latLng(parseFloat(match[1]), parseFloat(match[2]));\n    }\n\n    if (center) {\n      var results = [{\n        name: query,\n        center: center,\n        bbox: center.toBounds(this.options.sizeInMeters)\n      }];\n      cb.call(context, results);\n    } else if (this.options.next) {\n      this.options.next.geocode(query, cb, context);\n    }\n  }\n});\nexport function latLng(options) {\n  return new LatLng(options);\n}","map":{"version":3,"sources":["/home/isnardo/rcr/rose-city-resource/client/node_modules/leaflet-control-geocoder/src/geocoders/latlng.js"],"names":["L","LatLng","Class","extend","options","next","undefined","sizeInMeters","initialize","Util","setOptions","geocode","query","cb","context","match","center","latLng","test","parseFloat","results","name","bbox","toBounds","call"],"mappings":"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","sourcesContent":["import L from 'leaflet';\n\nexport var LatLng = L.Class.extend({\n  options: {\n    // the next geocoder to use\n    next: undefined,\n    sizeInMeters: 10000\n  },\n\n  initialize: function(options) {\n    L.Util.setOptions(this, options);\n  },\n\n  geocode: function(query, cb, context) {\n    var match;\n    var center;\n    // regex from https://github.com/openstreetmap/openstreetmap-website/blob/master/app/controllers/geocoder_controller.rb\n    if ((match = query.match(/^([NS])\\s*(\\d{1,3}(?:\\.\\d*)?)\\W*([EW])\\s*(\\d{1,3}(?:\\.\\d*)?)$/))) {\n      // [NSEW] decimal degrees\n      center = L.latLng(\n        (/N/i.test(match[1]) ? 1 : -1) * parseFloat(match[2]),\n        (/E/i.test(match[3]) ? 1 : -1) * parseFloat(match[4])\n      );\n    } else if (\n      (match = query.match(/^(\\d{1,3}(?:\\.\\d*)?)\\s*([NS])\\W*(\\d{1,3}(?:\\.\\d*)?)\\s*([EW])$/))\n    ) {\n      // decimal degrees [NSEW]\n      center = L.latLng(\n        (/N/i.test(match[2]) ? 1 : -1) * parseFloat(match[1]),\n        (/E/i.test(match[4]) ? 1 : -1) * parseFloat(match[3])\n      );\n    } else if (\n      (match = query.match(\n        /^([NS])\\s*(\\d{1,3})°?\\s*(\\d{1,3}(?:\\.\\d*)?)?['′]?\\W*([EW])\\s*(\\d{1,3})°?\\s*(\\d{1,3}(?:\\.\\d*)?)?['′]?$/\n      ))\n    ) {\n      // [NSEW] degrees, decimal minutes\n      center = L.latLng(\n        (/N/i.test(match[1]) ? 1 : -1) * (parseFloat(match[2]) + parseFloat(match[3] / 60)),\n        (/E/i.test(match[4]) ? 1 : -1) * (parseFloat(match[5]) + parseFloat(match[6] / 60))\n      );\n    } else if (\n      (match = query.match(\n        /^(\\d{1,3})°?\\s*(\\d{1,3}(?:\\.\\d*)?)?['′]?\\s*([NS])\\W*(\\d{1,3})°?\\s*(\\d{1,3}(?:\\.\\d*)?)?['′]?\\s*([EW])$/\n      ))\n    ) {\n      // degrees, decimal minutes [NSEW]\n      center = L.latLng(\n        (/N/i.test(match[3]) ? 1 : -1) * (parseFloat(match[1]) + parseFloat(match[2] / 60)),\n        (/E/i.test(match[6]) ? 1 : -1) * (parseFloat(match[4]) + parseFloat(match[5] / 60))\n      );\n    } else if (\n      (match = query.match(\n        /^([NS])\\s*(\\d{1,3})°?\\s*(\\d{1,2})['′]?\\s*(\\d{1,3}(?:\\.\\d*)?)?[\"″]?\\W*([EW])\\s*(\\d{1,3})°?\\s*(\\d{1,2})['′]?\\s*(\\d{1,3}(?:\\.\\d*)?)?[\"″]?$/\n      ))\n    ) {\n      // [NSEW] degrees, minutes, decimal seconds\n      center = L.latLng(\n        (/N/i.test(match[1]) ? 1 : -1) *\n          (parseFloat(match[2]) + parseFloat(match[3] / 60 + parseFloat(match[4] / 3600))),\n        (/E/i.test(match[5]) ? 1 : -1) *\n          (parseFloat(match[6]) + parseFloat(match[7] / 60) + parseFloat(match[8] / 3600))\n      );\n    } else if (\n      (match = query.match(\n        /^(\\d{1,3})°?\\s*(\\d{1,2})['′]?\\s*(\\d{1,3}(?:\\.\\d*)?)?[\"″]\\s*([NS])\\W*(\\d{1,3})°?\\s*(\\d{1,2})['′]?\\s*(\\d{1,3}(?:\\.\\d*)?)?[\"″]?\\s*([EW])$/\n      ))\n    ) {\n      // degrees, minutes, decimal seconds [NSEW]\n      center = L.latLng(\n        (/N/i.test(match[4]) ? 1 : -1) *\n          (parseFloat(match[1]) + parseFloat(match[2] / 60 + parseFloat(match[3] / 3600))),\n        (/E/i.test(match[8]) ? 1 : -1) *\n          (parseFloat(match[5]) + parseFloat(match[6] / 60) + parseFloat(match[7] / 3600))\n      );\n    } else if (\n      (match = query.match(/^\\s*([+-]?\\d+(?:\\.\\d*)?)\\s*[\\s,]\\s*([+-]?\\d+(?:\\.\\d*)?)\\s*$/))\n    ) {\n      center = L.latLng(parseFloat(match[1]), parseFloat(match[2]));\n    }\n    if (center) {\n      var results = [\n        {\n          name: query,\n          center: center,\n          bbox: center.toBounds(this.options.sizeInMeters)\n        }\n      ];\n      cb.call(context, results);\n    } else if (this.options.next) {\n      this.options.next.geocode(query, cb, context);\n    }\n  }\n});\n\nexport function latLng(options) {\n  return new LatLng(options);\n}\n"]},"metadata":{},"sourceType":"module"}