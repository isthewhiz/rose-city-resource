{"ast":null,"code":"import L from 'leaflet';\nimport { getJSON } from '../util';\nexport var Photon = L.Class.extend({\n  options: {\n    serviceUrl: 'https://photon.komoot.de/api/',\n    reverseUrl: 'https://photon.komoot.de/reverse/',\n    nameProperties: ['name', 'street', 'suburb', 'hamlet', 'town', 'city', 'state', 'country']\n  },\n  initialize: function (options) {\n    L.setOptions(this, options);\n  },\n  geocode: function (query, cb, context) {\n    var params = L.extend({\n      q: query\n    }, this.options.geocodingQueryParams);\n    getJSON(this.options.serviceUrl, params, L.bind(function (data) {\n      cb.call(context, this._decodeFeatures(data));\n    }, this));\n  },\n  suggest: function (query, cb, context) {\n    return this.geocode(query, cb, context);\n  },\n  reverse: function (latLng, scale, cb, context) {\n    var params = L.extend({\n      lat: latLng.lat,\n      lon: latLng.lng\n    }, this.options.reverseQueryParams);\n    getJSON(this.options.reverseUrl, params, L.bind(function (data) {\n      cb.call(context, this._decodeFeatures(data));\n    }, this));\n  },\n  _decodeFeatures: function (data) {\n    var results = [],\n        i,\n        f,\n        c,\n        latLng,\n        extent,\n        bbox;\n\n    if (data && data.features) {\n      for (i = 0; i < data.features.length; i++) {\n        f = data.features[i];\n        c = f.geometry.coordinates;\n        latLng = L.latLng(c[1], c[0]);\n        extent = f.properties.extent;\n\n        if (extent) {\n          bbox = L.latLngBounds([extent[1], extent[0]], [extent[3], extent[2]]);\n        } else {\n          bbox = L.latLngBounds(latLng, latLng);\n        }\n\n        results.push({\n          name: this._decodeFeatureName(f),\n          html: this.options.htmlTemplate ? this.options.htmlTemplate(f) : undefined,\n          center: latLng,\n          bbox: bbox,\n          properties: f.properties\n        });\n      }\n    }\n\n    return results;\n  },\n  _decodeFeatureName: function (f) {\n    return (this.options.nameProperties || []).map(function (p) {\n      return f.properties[p];\n    }).filter(function (v) {\n      return !!v;\n    }).join(', ');\n  }\n});\nexport function photon(options) {\n  return new Photon(options);\n}","map":{"version":3,"sources":["/home/isnardo/rcr/rose-city-resource/client/node_modules/leaflet-control-geocoder/src/geocoders/photon.js"],"names":["L","getJSON","Photon","Class","extend","options","serviceUrl","reverseUrl","nameProperties","initialize","setOptions","geocode","query","cb","context","params","q","geocodingQueryParams","bind","data","call","_decodeFeatures","suggest","reverse","latLng","scale","lat","lon","lng","reverseQueryParams","results","i","f","c","extent","bbox","features","length","geometry","coordinates","properties","latLngBounds","push","name","_decodeFeatureName","html","htmlTemplate","undefined","center","map","p","filter","v","join","photon"],"mappings":"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","sourcesContent":["import L from 'leaflet';\nimport { getJSON } from '../util';\n\nexport var Photon = L.Class.extend({\n  options: {\n    serviceUrl: 'https://photon.komoot.de/api/',\n    reverseUrl: 'https://photon.komoot.de/reverse/',\n    nameProperties: ['name', 'street', 'suburb', 'hamlet', 'town', 'city', 'state', 'country']\n  },\n\n  initialize: function(options) {\n    L.setOptions(this, options);\n  },\n\n  geocode: function(query, cb, context) {\n    var params = L.extend(\n      {\n        q: query\n      },\n      this.options.geocodingQueryParams\n    );\n\n    getJSON(\n      this.options.serviceUrl,\n      params,\n      L.bind(function(data) {\n        cb.call(context, this._decodeFeatures(data));\n      }, this)\n    );\n  },\n\n  suggest: function(query, cb, context) {\n    return this.geocode(query, cb, context);\n  },\n\n  reverse: function(latLng, scale, cb, context) {\n    var params = L.extend(\n      {\n        lat: latLng.lat,\n        lon: latLng.lng\n      },\n      this.options.reverseQueryParams\n    );\n\n    getJSON(\n      this.options.reverseUrl,\n      params,\n      L.bind(function(data) {\n        cb.call(context, this._decodeFeatures(data));\n      }, this)\n    );\n  },\n\n  _decodeFeatures: function(data) {\n    var results = [],\n      i,\n      f,\n      c,\n      latLng,\n      extent,\n      bbox;\n\n    if (data && data.features) {\n      for (i = 0; i < data.features.length; i++) {\n        f = data.features[i];\n        c = f.geometry.coordinates;\n        latLng = L.latLng(c[1], c[0]);\n        extent = f.properties.extent;\n\n        if (extent) {\n          bbox = L.latLngBounds([extent[1], extent[0]], [extent[3], extent[2]]);\n        } else {\n          bbox = L.latLngBounds(latLng, latLng);\n        }\n\n        results.push({\n          name: this._decodeFeatureName(f),\n          html: this.options.htmlTemplate ? this.options.htmlTemplate(f) : undefined,\n          center: latLng,\n          bbox: bbox,\n          properties: f.properties\n        });\n      }\n    }\n\n    return results;\n  },\n\n  _decodeFeatureName: function(f) {\n    return (this.options.nameProperties || [])\n      .map(function(p) {\n        return f.properties[p];\n      })\n      .filter(function(v) {\n        return !!v;\n      })\n      .join(', ');\n  }\n});\n\nexport function photon(options) {\n  return new Photon(options);\n}\n"]},"metadata":{},"sourceType":"module"}